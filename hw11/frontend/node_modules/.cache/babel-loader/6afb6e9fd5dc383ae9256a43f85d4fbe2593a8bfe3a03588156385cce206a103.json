{"ast":null,"code":"import Sidebar from \"./sidebar/Sidebar\";\nimport Index from \"./main/Index\";\nimport Enter from \"./main/Enter\";\nimport Users from \"./page/Users\";\nimport Register from \"./main/Register\";\nimport WritePost from \"./page/WritePost\";\nimport PostPage from \"./page/PostPage\";\nimport axios from \"axios\";\nexport default {\n  name: \"Middle\",\n  data: function () {\n    return {\n      page: \"Index\",\n      post: null\n    };\n  },\n  components: {\n    Register,\n    Enter,\n    Index,\n    Sidebar,\n    WritePost,\n    Users,\n    PostPage\n  },\n  props: [\"posts\", \"users\", \"user\"],\n  computed: {\n    viewPosts: function () {\n      return Object.values(this.posts).sort((a, b) => b.id - a.id).slice(0, 2);\n    }\n  },\n  beforeCreate() {\n    this.$root.$on(\"onChangePage\", page => this.page = page);\n    this.$root.$on(\"onOpenPost\", (page, postId) => (this.page = page, this.post = Object.values(this.posts).filter(post => post.id === postId).at(0)));\n    this.$root.$on(\"onWriteComment\", text => {\n      if (this.user) {\n        if (!this.post) {\n          this.$root.$emit(\"onWriteCommentValidationError\", \"ID is invalid\");\n        } else if (!text || text.trim().length < 10) {\n          this.$root.$emit(\"onWriteCommentValidationError\", \"Text is too short\");\n        } else {\n          axios.post(\"/api/1/posts/comment\", {\n            text,\n            user: this.user,\n            post: this.posts.filter(post => post.id === this.post.id)\n          }).then(() => {\n            axios.get(\"/api/1/posts\").then(response => {\n              this.props.posts = response.data;\n            });\n            this.$root.$emit(\"onChangePage\", \"Index\");\n          }).catch(error => {\n            this.$root.$emit(\"onWriteCommentValidationError\", error.response.data);\n          });\n          this.$root.$emit(\"onWriteCommentValidationError\", \"\");\n        }\n      } else {\n        this.$root.$emit(\"onWriteCommentValidationError\", \"No access\");\n      }\n    });\n  }\n};","map":{"version":3,"names":["Sidebar","Index","Enter","Users","Register","WritePost","PostPage","axios","name","data","page","post","components","props","computed","viewPosts","Object","values","posts","sort","a","b","id","slice","beforeCreate","$root","$on","postId","filter","at","text","user","$emit","trim","length","then","get","response","catch","error"],"sources":["src/components/Middle.vue"],"sourcesContent":["<template>\r\n    <div class=\"middle\">\r\n        <Sidebar :posts=\"viewPosts\"/>\r\n        <main>\r\n            <Index :users=\"users\" :posts=\"posts\" v-if=\"page === 'Index'\"/>\r\n            <Users :users=\"users\" v-if=\"page === 'Users'\"/>\r\n            <Enter v-if=\"page === 'Enter'\"/>\r\n            <Register v-if=\"page === 'Register'\"/>\r\n            <WritePost :user=\"user\" v-if=\"page === 'WritePost'\"/>\r\n            <PostPage :post=\"post\" :user=\"user\" v-if=\"page === 'PostPage'\"/>\r\n        </main>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Sidebar from \"./sidebar/Sidebar\";\r\nimport Index from \"./main/Index\";\r\nimport Enter from \"./main/Enter\";\r\nimport Users from \"./page/Users\";\r\nimport Register from \"./main/Register\";\r\nimport WritePost from \"./page/WritePost\";\r\nimport PostPage from \"./page/PostPage\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n    name: \"Middle\",\r\n    data: function () {\r\n        return {\r\n            page: \"Index\",\r\n            post: null\r\n        }\r\n    },\r\n    components: {\r\n        Register,\r\n        Enter,\r\n        Index,\r\n        Sidebar,\r\n        WritePost,\r\n        Users,\r\n        PostPage\r\n    },\r\n    props: [\"posts\", \"users\", \"user\"],\r\n    computed: {\r\n        viewPosts: function () {\r\n            return Object.values(this.posts).sort((a, b) => b.id - a.id).slice(0, 2);\r\n        }\r\n    }, beforeCreate() {\r\n        this.$root.$on(\"onChangePage\", (page) => this.page = page)\r\n        this.$root.$on(\"onOpenPost\", (page, postId) =>\r\n            (this.page = page, this.post = Object.values(this.posts).filter(post => post.id === postId).at(0)))\r\n\r\n        this.$root.$on(\"onWriteComment\", (text) => {\r\n            if (this.user) {\r\n                if (!this.post) {\r\n                    this.$root.$emit(\"onWriteCommentValidationError\", \"ID is invalid\");\r\n\r\n                } else if (!text || text.trim().length < 10) {\r\n                    this.$root.$emit(\"onWriteCommentValidationError\", \"Text is too short\");\r\n                } else {\r\n\r\n                    axios.post(\"/api/1/posts/comment\", {\r\n                        text, user: this.user, post : this.posts.filter(post => post.id === this.post.id)\r\n                    }).then(() => {\r\n                        axios.get(\"/api/1/posts\").then(response => {\r\n                            this.props.posts = response.data;\r\n                        });\r\n                        this.$root.$emit(\"onChangePage\", \"Index\")\r\n                    }).catch(error => {\r\n                        this.$root.$emit(\"onWriteCommentValidationError\", error.response.data);\r\n                    });\r\n                    this.$root.$emit(\"onWriteCommentValidationError\", \"\");\r\n                }\r\n            } else {\r\n                this.$root.$emit(\"onWriteCommentValidationError\", \"No access\");\r\n\r\n            }\r\n\r\n        })\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":"AAeA,OAAAA,OAAA;AACA,OAAAC,KAAA;AACA,OAAAC,KAAA;AACA,OAAAC,KAAA;AACA,OAAAC,QAAA;AACA,OAAAC,SAAA;AACA,OAAAC,QAAA;AACA,OAAAC,KAAA;AAEA;EACAC,IAAA;EACAC,IAAA,WAAAA,CAAA;IACA;MACAC,IAAA;MACAC,IAAA;IACA;EACA;EACAC,UAAA;IACAR,QAAA;IACAF,KAAA;IACAD,KAAA;IACAD,OAAA;IACAK,SAAA;IACAF,KAAA;IACAG;EACA;EACAO,KAAA;EACAC,QAAA;IACAC,SAAA,WAAAA,CAAA;MACA,OAAAC,MAAA,CAAAC,MAAA,MAAAC,KAAA,EAAAC,IAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAA,CAAA,CAAAC,EAAA,GAAAF,CAAA,CAAAE,EAAA,EAAAC,KAAA;IACA;EACA;EAAAC,aAAA;IACA,KAAAC,KAAA,CAAAC,GAAA,iBAAAhB,IAAA,SAAAA,IAAA,GAAAA,IAAA;IACA,KAAAe,KAAA,CAAAC,GAAA,gBAAAhB,IAAA,EAAAiB,MAAA,MACA,KAAAjB,IAAA,GAAAA,IAAA,OAAAC,IAAA,GAAAK,MAAA,CAAAC,MAAA,MAAAC,KAAA,EAAAU,MAAA,CAAAjB,IAAA,IAAAA,IAAA,CAAAW,EAAA,KAAAK,MAAA,EAAAE,EAAA;IAEA,KAAAJ,KAAA,CAAAC,GAAA,mBAAAI,IAAA;MACA,SAAAC,IAAA;QACA,UAAApB,IAAA;UACA,KAAAc,KAAA,CAAAO,KAAA;QAEA,YAAAF,IAAA,IAAAA,IAAA,CAAAG,IAAA,GAAAC,MAAA;UACA,KAAAT,KAAA,CAAAO,KAAA;QACA;UAEAzB,KAAA,CAAAI,IAAA;YACAmB,IAAA;YAAAC,IAAA,OAAAA,IAAA;YAAApB,IAAA,OAAAO,KAAA,CAAAU,MAAA,CAAAjB,IAAA,IAAAA,IAAA,CAAAW,EAAA,UAAAX,IAAA,CAAAW,EAAA;UACA,GAAAa,IAAA;YACA5B,KAAA,CAAA6B,GAAA,iBAAAD,IAAA,CAAAE,QAAA;cACA,KAAAxB,KAAA,CAAAK,KAAA,GAAAmB,QAAA,CAAA5B,IAAA;YACA;YACA,KAAAgB,KAAA,CAAAO,KAAA;UACA,GAAAM,KAAA,CAAAC,KAAA;YACA,KAAAd,KAAA,CAAAO,KAAA,kCAAAO,KAAA,CAAAF,QAAA,CAAA5B,IAAA;UACA;UACA,KAAAgB,KAAA,CAAAO,KAAA;QACA;MACA;QACA,KAAAP,KAAA,CAAAO,KAAA;MAEA;IAEA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}